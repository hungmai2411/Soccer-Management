/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package SoccerManagermentUIdelegate;
import java.sql.*;
import java.util.Date;
import SoccerManagementModel.*;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import SoccerManagementDTO.*;
import java.awt.Image;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author Administrator
 */
public class EditMatch extends javax.swing.JFrame {

    /**
     * Creates new form EditMatch
     */
    Date datestart = new Date(),dateend= new Date(),dateselected = new Date();
    static MatchShedules match;
    public EditMatch(MatchShedules match1) {
        setTitle("Match Information");
        match=match1;
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        LoadMatch(match1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        time = new cambodia.raven.Time();
        jPanel1 = new javax.swing.JPanel();
        lblPic2 = new javax.swing.JLabel();
        lblPic1 = new javax.swing.JLabel();
        lblTeam1 = new javax.swing.JLabel();
        lblTeam2 = new javax.swing.JLabel();
        txtStadium = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        btnTime = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        KickDate = new com.toedter.calendar.JDateChooser();

        time.setTextRefernce(txtTime);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblPic2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagestore/football-player.png"))); // NOI18N

        lblPic1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagestore/football-player.png"))); // NOI18N

        lblTeam1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblTeam1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTeam1.setText("Man United");

        lblTeam2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblTeam2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTeam2.setText("Man United");

        txtStadium.setBorder(javax.swing.BorderFactory.createTitledBorder("Stadium"));

        txtTime.setBorder(javax.swing.BorderFactory.createTitledBorder("Time"));

        btnTime.setText("...");
        btnTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimeActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        KickDate.setBackground(new java.awt.Color(255, 255, 255));
        KickDate.setBorder(javax.swing.BorderFactory.createTitledBorder("Date"));
        KickDate.setForeground(new java.awt.Color(255, 255, 255));
        KickDate.setDateFormatString("yyyy-MM-dd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblPic1)
                    .addComponent(lblTeam1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addComponent(btnTime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtStadium)
                    .addComponent(KickDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblPic2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTeam2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(58, 58, 58))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPic2)
                    .addComponent(lblPic1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTime))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(KickDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStadium, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTeam1)
                    .addComponent(lblTeam2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimeActionPerformed
        // TODO add your handling code here:
        time.showPopup();
    }//GEN-LAST:event_btnTimeActionPerformed

    public void LoadMatch(MatchShedules matchid){
        ImageIcon imgThisImg = new ImageIcon(new ImageIcon(matchid.getPic1()).getImage()
               .getScaledInstance(128, 128, Image.SCALE_SMOOTH));
               lblPic1.setIcon(imgThisImg);
        imgThisImg = new ImageIcon(new ImageIcon(matchid.getPic2()).getImage()
               .getScaledInstance(128, 128, Image.SCALE_SMOOTH));
               lblPic2.setIcon(imgThisImg);
        lblTeam1.setText(matchid.getTeam1name());
        lblTeam2.setText(matchid.getTeam2name());
        txtStadium.setText(matchid.getStadium());
        if(matchid.getDate()!=null){
                        try{
                        String sDate1=matchid.getDate();
                        Date date1=new SimpleDateFormat("yyyy-MM-dd").parse(sDate1);  
                        KickDate.setDate(date1);
                    }
                    catch(Exception e){
                        e.printStackTrace();
                    }
                }
        else{
            Date date= new Date();
            KickDate.setDate(date);
        }
                    
        if(matchid.getTime()!=null){
            txtTime.setText(matchid.getTime());
        }

        SimpleDateFormat df= new SimpleDateFormat("yyyy-MM-dd");
        Connection con= new ConnectDB().createConn();
        String sql="select timeend,timestart from tournament where idtnm=?";
        try{
            PreparedStatement pre= con.prepareStatement(sql,ResultSet.TYPE_SCROLL_SENSITIVE, 
                        ResultSet.CONCUR_UPDATABLE);
            pre.setInt(1, match.getIdtnm());
            ResultSet rs= pre.executeQuery();
            
            while(rs.next()){
                datestart= df.parse(rs.getString("timestart"));
                dateend= df.parse(rs.getString("timeend"));
                
            }
            
            con.close();
            
        }
        catch(SQLException e){
            e.printStackTrace();
            System.err.println("Lỗi add date");
        } catch (ParseException ex) {
            Logger.getLogger(EditMatch.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        dateselected= KickDate.getDate();
        if(dateselected.compareTo(dateend)>0)
            JOptionPane.showMessageDialog(null,"Ngày đá phải trước ngày kết thúc","Thông báo",JOptionPane.INFORMATION_MESSAGE);
        else if(dateselected.compareTo(datestart)<0)
            JOptionPane.showMessageDialog(null,"Ngày đá phải sau ngày bắt đầu","Thông báo",JOptionPane.INFORMATION_MESSAGE);
        else{
            Connection con= new ConnectDB().createConn();
            String sqlUpdate= "update match1 set stadium = ?, date=?,time=? where idmatch=? ";
            try{
                PreparedStatement pre= con.prepareStatement(sqlUpdate,ResultSet.TYPE_SCROLL_SENSITIVE, 
                            ResultSet.CONCUR_UPDATABLE);
                pre.setString(1, txtStadium.getText());
                DateFormat df=new SimpleDateFormat("yyyy-MM-dd");
                pre.setString(2, df.format(KickDate.getDate()));
                pre.setString(3, time.getSelectedTimeDB());
                pre.setInt(4, match.getIdmatch());
                pre.executeUpdate();

                JOptionPane.showMessageDialog(null,"Thêm dữ liệu thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);

                con.close();

            }
            catch(SQLException e){
                e.printStackTrace();
                System.out.println("Lỗi add Match");
            }
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditMatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditMatch(match).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser KickDate;
    private javax.swing.JButton btnTime;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblPic1;
    private javax.swing.JLabel lblPic2;
    private javax.swing.JLabel lblTeam1;
    private javax.swing.JLabel lblTeam2;
    private cambodia.raven.Time time;
    private javax.swing.JTextField txtStadium;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
